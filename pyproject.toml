[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "pytest-bokeh-regressions"
dynamic = ["version"]  # read from pytest_bokeh_regressions/__init__.py
description = "Pytest plugin providing utilities for regression testing of plotting functions using the bokeh library."
authors = [{name = "Henning JanÃŸen", email = "henning.janssen@gmx.net"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Development Status :: 2 - Pre-Alpha",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
        "Framework :: Pytest",
        "Topic :: Software Development :: Testing"
    ]

keywords = ['pytest', 'plugin', 'bokeh']
requires-python = ">=3.8"
dependencies = [
            'pytest',
            'pytest-regressions',
            'numpy'
        ]

[project.optional-dependencies]
pre-commit = [
    'pre-commit>=2.6.0',
    'pylint>=2.11.1',
    ]
testing = [
    'bokeh',
]

[project.urls]
Home = "https://github.com/janssenhenning/pytest-bokeh-regressions"
Source = "https://github.com/janssenhenning/pytest-bokeh-regressions"

[project.entry-points.pytest11]
pytest-bokeh-regressions = "pytest_bokeh_regressions.plugin"


[tool.flit.module]
name = "pytest_bokeh_regressions"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--durations=30 --quiet --cov=pytest_bokeh_regressions --cov=tests --cov-report xml"
testpaths = [
  "tests"
]

[tool.pydocstyle]
ignore = ["D105","D2","D4"]
match-dir="(?!(tests)).*"

[tool.mypy]
python_version = "3.8"
warn_unused_ignores = true
warn_redundant_casts = true
no_implicit_optional = true
show_error_codes = true
warn_no_return = true
disallow_incomplete_defs = true
disallow_subclassing_any = true

[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.pylint.basic]
good-names = [
    "_",
    "x",
    "y",
    "z",
    "i",
    "j",
    "k",
]
no-docstring-rgx = "^_"
docstring-min-length = 5

[tool.pylint.design]
max-locals = 20

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
disable = [
    "line-too-long",
    "import-outside-toplevel",
    "too-few-public-methods"
]
